[{"C:\\Users\\mukhe\\OneDrive\\Desktop\\web development\\React\\weatherproject\\src\\index.js":"1","C:\\Users\\mukhe\\OneDrive\\Desktop\\web development\\React\\weatherproject\\src\\components\\Tempapp.jsx":"2"},{"size":163,"mtime":1677478542766,"results":"3","hashOfConfig":"4"},{"size":1955,"mtime":1677649607053,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a3byga",{"filePath":"9","messages":"10","suppressedMessages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"C:\\Users\\mukhe\\OneDrive\\Desktop\\web development\\React\\weatherproject\\src\\index.js",[],[],"C:\\Users\\mukhe\\OneDrive\\Desktop\\web development\\React\\weatherproject\\src\\components\\Tempapp.jsx",["13"],[],"import React, { useState, useEffect } from \"react\";\r\nfunction Temp() {\r\n  const [city, setCity] = useState(\"Mumbai\");\r\n  const [buttonCity, setButtonCity] = useState(city);\r\n  const [weatherData, setWeatherData] = useState(\"\");\r\n\r\n  function handleChange(event) {\r\n    var val = event.target.value;\r\n    setCity(val);\r\n  }\r\n  function buttonClick() {\r\n    return setButtonCity(city);\r\n  }\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      const response = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${buttonCity}&appid=41562a6fa663497de0a473ee54ed9d87&units=metric`\r\n      );\r\n\r\n      const data = await response.json();\r\n      setWeatherData(data);\r\n      console.log(data);\r\n    };\r\n    fetchApi();\r\n  }, [buttonCity]);\r\n  return (\r\n    <div className=\"box\">\r\n      <div className=\"heading\">\r\n        <h1>Weather App</h1>\r\n        <div className=\"image\">\r\n          <img\r\n            src=\"https://cdn.icon-icons.com/icons2/2211/PNG/512/weather_sun_sunny_cloud_icon_134157.png\"\r\n            height={35}\r\n            width={33}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"inputField\">\r\n        <input type=\"search\" name=\"inputBox\" onChange={handleChange} />\r\n        <button type=\"submit\" onClick={buttonClick}>\r\n          <i className=\"fa-solid fa-magnifying-glass\"></i>\r\n        </button>\r\n      </div>\r\n      <div>\r\n        {weatherData.cod===200? \r\n          (<div className=\"text\">\r\n            <h1>{buttonCity}</h1>\r\n            <h2>{weatherData.main.temp} Â°cel</h2>\r\n            <p>{weatherData.weather[0].description}</p>\r\n            <p>\r\n              min : {weatherData.main.temp_min} | max:\r\n              {weatherData.main.temp_max}\r\n            </p>\r\n          </div>):\r\n          (<div>\r\n            <p style={{textAlign:\"center\"}}>No data found...try typing another city name</p>\r\n          </div>\r\n        ) }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Temp;\r\n",{"ruleId":"14","severity":1,"message":"15","line":31,"column":11,"nodeType":"16","endLine":35,"endColumn":13},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]